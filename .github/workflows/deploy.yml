# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a two jobs called "build" and "deploy"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Ensure this matches your project's Node.js version

      - name: Install dependencies
        run: npm install

      - name: Build Vue App
        run: npm run build

      - name: Check for Symlinks and Hard Links
        run: |
          echo "Checking for symlinks in dist folder..."
          SYMLINKS=$(find ./dist -type l)
          if [ -n "$SYMLINKS" ]; then
            echo "Symlinks found in dist folder:"
            echo "$SYMLINKS"
          else
            echo "No symlinks found."
          fi

          echo "Checking for hard links in dist folder..."
          HARDLINKS=$(find ./dist -type f -links +1)
          if [ -n "$HARDLINKS" ]; then
            echo "Hard links found in dist folder:"
            echo "$HARDLINKS"
          else
            echo "No hard links found."
          fi
     
      - name: Check size of dist folder
        run: |
          echo "Checking total size of dist folder..."
          SIZE=$(du -sh ./dist | awk '{print $1}')
          echo "Total size of dist folder: $SIZE"
          
          # Convert human-readable size (e.g., 840K, 1M, 2G) into bytes for comparison
          SIZE_IN_BYTES=$(numfmt --from=iec $SIZE)
          MAX_SIZE_IN_BYTES=10737418240  # 10GB in bytes

          if [ "$SIZE_IN_BYTES" -gt "$MAX_SIZE_IN_BYTES" ]; then
            echo "Warning: dist folder exceeds 10GB limit!"
          else
            echo "dist folder size is within the acceptable limit."
          fi
      - name: Verify dist folder contents
        run: |
          echo "Listing contents of dist folder before upload:"
          ls -al ./dist
      - name: List all files in dist folder (including hidden)
        run: |
          echo "Listing all files (including hidden) in dist folder:"
          ls -alR ./dist 

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./dist # Upload the `dist` folder as an artifact   

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
        contents: read
        pages: write
        id-token: write
        
    steps:  

     - name: Checkout code
       uses: actions/checkout@v4

     - name: Download artifact
       uses: actions/download-artifact@v4
       with:
         name: github-pages # Artifact name used here should match the one used in upload
         path: ./dist  # Ensure the path is correctly specified
 # This should now exist if the artifact is downloaded correctly
     - name: List contents of downloaded artifact
       run: |
           echo "Listing contents of downloaded artifact:"
           ls -alR ./dist  
  #Remove git metadata from dist folder before the deployment
     - name: Clean up dist folder
       run: |
          rm -rf ./dist/.git 
          rm -rf ./dist/.DS_Store 
          
     - name: Deploy to GitHub Pages
       uses: actions/deploy-pages@v4
       env:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
      
